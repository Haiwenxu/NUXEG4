import uproot
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt

# Open the ROOT file and the specific TTree
file_path = "LXe_ntuple.root"
tree_name = "NUXE"

# Open the file and access the TTree
with uproot.open(file_path) as root_file:
    tree = root_file[tree_name]

    # Read the data for single-value branches (one entry per event)
    energy = tree["Event_Energy"].array()
    event_x = tree["Event_X"].array()
    event_y = tree["Event_Y"].array()
    event_z = tree["Event_Z"].array()

    # Read the data for multi-value branches (multiple entries per event)
    hit_x = tree["Hit_X"].array()
    hit_y = tree["Hit_Y"].array()
    hit_z = tree["Hit_Z"].array()
    hit_time = tree["Hit_Time"].array()
    hit_ch = tree['SiPM#'].array()
    print(hit_ch[0])

# Plot 3D scatter plot of hits for each event
events = []
primary = []
ch_map = {'0': [22.712911410314216, 34.97406170163838, 37.75], '1': [22.712911410314216, 34.97406170163838, 22.65], '2': [22.712911410314216, 34.97406170163838, 7.550000000000001], '3': [22.712911410314216, 34.97406170163838, -7.549999999999997], '4': [22.712911410314216, 34.97406170163838, -22.65], '5': [22.712911410314216, 34.97406170163838, -37.75], '6': [8.669942516142715, 40.79084987358771, 37.75], '7': [8.669942516142715, 40.79084987358771, 22.65], '8': [8.669942516142715, 40.79084987358771, 7.550000000000001], '9': [8.669942516142715, 40.79084987358771, -7.549999999999997], '12': [40.790849873587675, 8.669942516142811, 37.75], '13': [40.790849873587675, 8.669942516142811, 22.65], '14': [40.790849873587675, 8.669942516142811, 7.550000000000001], '15': [40.790849873587675, 8.669942516142811, -7.549999999999997], '16': [40.790849873587675, 8.669942516142811, -22.65], '17': [40.790849873587675, 8.669942516142811, -37.75], '18': [34.9740617016384, 22.71291141031415, 37.75], '19': [34.9740617016384, 22.71291141031415, 22.65], '20': [34.9740617016384, 22.71291141031415, 7.550000000000001], '21': [34.9740617016384, 22.71291141031415, -7.549999999999997], '22': [34.9740617016384, 22.71291141031415, -22.65], '23': [34.9740617016384, 22.71291141031415, -37.75], '24': [40.79084987358773, -8.669942516142669, 37.75], '25': [40.79084987358773, -8.669942516142669, 22.65], '26': [40.79084987358773, -8.669942516142669, 7.550000000000001], '27': [40.79084987358773, -8.669942516142669, -7.549999999999997], '28': [40.79084987358773, -8.669942516142669, -22.65], '29': [40.79084987358773, -8.669942516142669, -37.75], '30': [34.97406170163836, -22.71291141031425, 37.75], '31': [34.97406170163836, -22.71291141031425, 22.65], '32': [34.97406170163836, -22.71291141031425, 7.550000000000001], '33': [34.97406170163836, -22.71291141031425, -7.549999999999997], '34': [34.97406170163836, -22.71291141031425, -22.65], '35': [34.97406170163836, -22.71291141031425, -37.75], '36': [22.712911410314238, -34.97406170163836, 37.75], '37': [22.712911410314238, -34.97406170163836, 22.65], '38': [22.712911410314238, -34.97406170163836, 7.550000000000001], '39': [22.712911410314238, -34.97406170163836, -7.549999999999997], '40': [22.712911410314238, -34.97406170163836, -22.65], '41': [22.712911410314238, -34.97406170163836, -37.75], '42': [8.669942516142704, -40.79084987358772, 37.75], '43': [8.669942516142704, -40.79084987358772, 22.65], '44': [8.669942516142704, -40.79084987358772, 7.550000000000001], '45': [8.669942516142704, -40.79084987358772, -7.549999999999997], '46': [8.669942516142704, -40.79084987358772, -22.65], '47': [8.669942516142704, -40.79084987358772, -37.75], '48': [-8.66994251614272, -40.79084987358771, 37.75], '49': [-8.66994251614272, -40.79084987358771, 22.65], '50': [-8.66994251614272, -40.79084987358771, 7.550000000000001], '51': [-8.66994251614272, -40.79084987358771, -7.549999999999997], '53': [-8.66994251614272, -40.79084987358771, -37.75], '54': [-22.712911410314206, -34.974061701638384, 37.75], '55': [-22.712911410314206, -34.974061701638384, 22.65], '56': [-22.712911410314206, -34.974061701638384, 7.550000000000001], '57': [-22.712911410314206, -34.974061701638384, -7.549999999999997], '58': [-22.712911410314206, -34.974061701638384, -22.65], '59': [-22.712911410314206, -34.974061701638384, -37.75], '60': [-34.9740617016384, -22.71291141031415, 37.75], '61': [-34.9740617016384, -22.71291141031415, 22.65], '62': [-34.9740617016384, -22.71291141031415, 7.550000000000001], '63': [-34.9740617016384, -22.71291141031415, -7.549999999999997], '64': [-34.9740617016384, -22.71291141031415, -22.65], '65': [-34.9740617016384, -22.71291141031415, -37.75], '66': [-40.790849873587675, -8.669942516142811, 37.75], '67': [-40.790849873587675, -8.669942516142811, 22.65], '68': [-40.790849873587675, -8.669942516142811, 7.550000000000001], '69': [-40.790849873587675, -8.669942516142811, -7.549999999999997], '70': [-40.790849873587675, -8.669942516142811, -22.65], '71': [-40.790849873587675, -8.669942516142811, -37.75], '72': [-34.9740617016383, 22.71291141031439, 37.75], '73': [-34.9740617016383, 22.71291141031439, 22.65], '74': [-34.9740617016383, 22.71291141031439, 7.550000000000001], '75': [-34.9740617016383, 22.71291141031439, -7.549999999999997], '76': [-34.9740617016383, 22.71291141031439, -22.65], '77': [-34.9740617016383, 22.71291141031439, -37.75], '78': [-40.79084987358778, 8.669942516142527, 37.75], '79': [-40.79084987358778, 8.669942516142527, 22.65], '80': [-40.79084987358778, 8.669942516142527, 7.550000000000001], '81': [-40.79084987358778, 8.669942516142527, -7.549999999999997], '82': [-40.79084987358778, 8.669942516142527, -22.65], '83': [-40.79084987358778, 8.669942516142527, -37.75], '84': [-8.669942516142704, 40.79084987358772, 37.75], '85': [-8.669942516142704, 40.79084987358772, 22.65], '86': [-8.669942516142704, 40.79084987358772, 7.550000000000001], '87': [-8.669942516142704, 40.79084987358772, -7.549999999999997], '88': [-8.669942516142704, 40.79084987358772, -22.65], '89': [-8.669942516142704, 40.79084987358772, -37.75], '90': [-22.712911410314238, 34.97406170163836, 37.75], '91': [-22.712911410314238, 34.97406170163836, 22.65], '92': [-22.712911410314238, 34.97406170163836, 7.550000000000001], '93': [-22.712911410314238, 34.97406170163836, -7.549999999999997], '94': [-22.712911410314238, 34.97406170163836, -22.65], '95': [-22.712911410314238, 34.97406170163836, -37.75], '10': [8.669942516142715, 40.79084987358771, -22.65], '11': [8.669942516142715, 40.79084987358771, -37.75], '52': [-8.66994251614272, -40.79084987358771, -22.65]} 
for i in range(10):
    event = [] 
    for j in range(96):
        if np.sum(hit_ch[i]==j) > 0:
            #ch_map[str(j)] = [np.min(hit_x[i][hit_ch[i]==j]), np.min(hit_y[i][hit_ch[i]==j]), np.min(hit_z[i][hit_ch[i]==j])]
            event.append([np.min(hit_x[i][hit_ch[i]==j]), np.min(hit_y[i][hit_ch[i]==j]), np.min(hit_z[i][hit_ch[i]==j]),  np.min(hit_time[i][hit_ch[i]==j]), np.sum(hit_ch[i]==j)])
        else:
            event.append(np.concatenate((np.array(ch_map[str(j)]), np.array([0, 0]))))
        #print(j, np.min(hit_x[i][hit_ch[i]==j]), np.min(hit_time[i][hit_ch[i]==j]) , np.sum(hit_ch[i]==j))
    events.append(event)
    primary.append([energy[i], event_x[i], event_y[i], event_z[i]])
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')

    # Scatter plot for hit positions (Hit_X, Hit_Y, Hit_Z)
    ax.scatter(hit_x[i], hit_y[i], hit_z[i], c=hit_time[i], cmap='viridis', marker='o')

    # Add labels and title
    ax.set_xlabel('Hit_X')
    ax.set_ylabel('Hit_Y')
    ax.set_zlabel('Hit_Z')
    ax.set_title(f'Event {i + 1}: Energy = {energy[i]}')

    # Show color bar for hit times
    scatter = ax.scatter(hit_x[i], hit_y[i], hit_z[i], c=hit_time[i], cmap='viridis')
    cbar = fig.colorbar(scatter, ax=ax, pad=0.1)
    cbar.set_label('Hit Time')

    # Show the plot
    plt.savefig('nuxe_event.png')
np.savez('nuxe_dataset.npz', primaries = np.array(primary) , detsim = np.array(events))
